
package sistema;

import datos.Conexion;
import datos.OrdenPedido_Clientes_DB;
import datos.OrdenPedido_Provedores_DB;
import java.awt.Color;
import java.awt.Dimension;
import static java.awt.Frame.NORMAL;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import negocio.Producto;

/**
 *
 * @author JAMS
 */
public class Elegir_ProductoOPP extends javax.swing.JFrame {
    
    private DefaultTableModel tabla;
    private Connection con;
    
    private int columna;
    private int opc;

    
    private Movimientos mov;
    /**
     * Creates new form Elegir_Producto
     */
    public Elegir_ProductoOPP(Movimientos p, int opc,Connection con) throws SQLException {
        initComponents();
        this.con=con;
        combo();
        this.opc=opc;
        creaciontabla();
        this.mov=p;
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        if(this.opc!=1){
            this.cbmoneda.setVisible(false);
            this.txtpunitario.setVisible(false);
            this.lbcantidad1.setVisible(false);
            this.lbcantidad2.setVisible(false);
            this.chivaproducto.setVisible(false);
            this.lbliva.setVisible(false);
        }
       
    }
    
     public void creaciontabla()
    {
        OrdenPedido_Provedores_DB db = new OrdenPedido_Provedores_DB (this.con);
        OrdenPedido_Clientes_DB dbc = new OrdenPedido_Clientes_DB (this.con);
        
        try
        {
            if (this.opc==1 || this.opc==3) {
                this.tabla=(DefaultTableModel) this.tbdatos.getModel();
                this.tabla.setRowCount(0);
                List <Producto> pro = db.select_productos();
                for (int i = 0; i < pro.size(); i++) {    
                    Object[] obj = new Object[7];
                    obj[0]=pro.get(i).getId();
                    obj[1]=pro.get(i).getNombre();
                    obj[2]=pro.get(i).getClave();
                    obj[3]=pro.get(i).getMedida();
                    obj[4]=pro.get(i).getPventa();
                    obj[5]=pro.get(i).getIva();
                    obj[6]=pro.get(i).getMoneda();
                    this.tabla.addRow(obj);
                }  
        }
            else
            {
                this.tabla=(DefaultTableModel) this.tbdatos.getModel();
                this.tabla.setRowCount(0);
                List <Producto> pro = dbc.select_productos();
                for (int i = 0; i < pro.size(); i++) {    
                    Object[] obj = new Object[7];
                    obj[0]=pro.get(i).getId();
                    obj[1]=pro.get(i).getNombre();
                    obj[2]=pro.get(i).getClave();
                    obj[3]=pro.get(i).getMedida();
                    obj[4]=pro.get(i).getPventa();
                    obj[5]=pro.get(i).getIva();
                    obj[6]=pro.get(i).getMoneda();
                    this.tabla.addRow(obj);
                }   

                this.chivaproducto.setVisible(false);
                this.lbliva.setVisible(false);
                this.cbmoneda.setVisible(false);
                this.lbcantidad1.setVisible(false);
                this.txtpunitario.setVisible(false);
                this.lbcantidad2.setVisible(false);
            }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Error  de conexion "+ ex);
             try {
                this.con=Conexion.getConnection();
            } catch (SQLException ex1) {
                Logger.getLogger(Datos.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error :"+ex);
        } 
        
        
        
           
        
    }
     
     public void combo() throws SQLException
     {
        OrdenPedido_Provedores_DB db = new OrdenPedido_Provedores_DB (this.con);
        List <String> op=db.select_monedas();
        for (int i = 0; i < op.size(); i++) {
            this.cbmoneda.addItem(op.get(i));
        }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbdatos = new javax.swing.JTable();
        cbmoneda = new javax.swing.JComboBox<>();
        btnAceptar = new javax.swing.JButton();
        lbcantidad2 = new javax.swing.JLabel();
        lbcantidad1 = new javax.swing.JLabel();
        txtpunitario = new javax.swing.JTextField();
        txtcantidad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtmedida = new javax.swing.JTextField();
        lbcantidad = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        txtclave = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtbuscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbliva = new javax.swing.JLabel();
        chivaproducto = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(162, 127, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel1.setText("Productos");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 169, 39));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbdatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Clave", "U Medida", "Precio", "Iva", "Moneda"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbdatos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbdatos.setColumnSelectionAllowed(true);
        tbdatos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbdatos.setShowHorizontalLines(false);
        tbdatos.setShowVerticalLines(false);
        tbdatos.getTableHeader().setReorderingAllowed(false);
        tbdatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbdatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbdatos);
        tbdatos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tbdatos.getColumnModel().getColumnCount() > 0) {
            tbdatos.getColumnModel().getColumn(0).setPreferredWidth(30);
            tbdatos.getColumnModel().getColumn(1).setPreferredWidth(200);
            tbdatos.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbdatos.getColumnModel().getColumn(3).setPreferredWidth(30);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 460, 247));

        cbmoneda.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbmoneda.setEnabled(false);
        jPanel2.add(cbmoneda, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, 133, -1));

        btnAceptar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.setEnabled(false);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        jPanel2.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 250, -1, -1));

        lbcantidad2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lbcantidad2.setText("Moneda :");
        lbcantidad2.setToolTipText("");
        jPanel2.add(lbcantidad2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 220, -1, -1));

        lbcantidad1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lbcantidad1.setText("Precio Unitario :");
        lbcantidad1.setToolTipText("");
        jPanel2.add(lbcantidad1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 190, -1, -1));

        txtpunitario.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtpunitario.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtpunitario.setEnabled(false);
        jPanel2.add(txtpunitario, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, 133, -1));

        txtcantidad.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtcantidad.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtcantidad.setEnabled(false);
        jPanel2.add(txtcantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 160, 133, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("U. Medida :");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, -1, -1));

        txtmedida.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtmedida.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtmedida.setEnabled(false);
        jPanel2.add(txtmedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, 133, -1));

        lbcantidad.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lbcantidad.setText("Cantidad :");
        lbcantidad.setToolTipText("");
        jPanel2.add(lbcantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Nombre Producto :");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, -1, -1));

        txtnombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtnombre.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtnombre.setEnabled(false);
        jPanel2.add(txtnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 220, -1));

        txtclave.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtclave.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtclave.setEnabled(false);
        jPanel2.add(txtclave, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, 133, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("ID Producto :");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, -1, -1));

        txtid.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtid.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtid.setEnabled(false);
        jPanel2.add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 133, -1));

        txtbuscar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbuscarKeyReleased(evt);
            }
        });
        jPanel2.add(txtbuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, 220, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Buscar  :");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Clave :");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 70, -1, -1));

        lbliva.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lbliva.setText("IVA :");
        lbliva.setToolTipText("");
        jPanel2.add(lbliva, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 250, -1, -1));

        chivaproducto.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        chivaproducto.setEnabled(false);
        jPanel2.add(chivaproducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 68, 850, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 848, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean valida_vacio(int opc)
    {
        boolean valida=true;

        if (this.txtcantidad.getText().isEmpty()) {
            valida = false;
            this.txtcantidad.setBackground(Color.decode("#FFCCCC"));
        }
        if (this.txtpunitario.getText().isEmpty()) {
            valida = false;
            this.txtpunitario.setBackground(Color.decode("#FFCCCC"));
        }
        return valida;
    }
    
    private boolean valida_formato(int opc)
    {
        boolean valida=true;
        switch(opc)
        {
            case 1:
                if (!this.txtcantidad.getText().matches("^([0-9]+)(\\.[0-9]+)?$")) {
                    valida = false;
                    this.txtcantidad.setBackground(Color.decode("#FFCCCC"));
                }
                if (!this.txtpunitario.getText().matches("^([0-9]+)(\\.[0-9]+)?$")) {
                    valida = false;
                    this.txtpunitario.setBackground(Color.decode("#FFCCCC"));
                }
                break;
                
            case 2:
                if (!this.txtcantidad.getText().matches("^([0-9]+)(\\.[0-9]+)?$")) {
                    valida = false;
                    this.txtcantidad.setBackground(Color.decode("#FFCCCC"));
                }
                
                break;
        }
        
        return valida;
    }
    
    private void txtbuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyReleased
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(this.tabla);
        this.tbdatos.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(this.txtbuscar.getText().toUpperCase(),1));
    }//GEN-LAST:event_txtbuscarKeyReleased

    private void tbdatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbdatosMouseClicked
        try
        {
            this.columna=this.tbdatos.getSelectedRow();

            this.txtid.setText(this.tbdatos.getValueAt(this.columna, 0).toString());
            this.txtnombre.setText(this.tbdatos.getValueAt(this.columna, 1).toString());
            this.txtclave.setText(this.tbdatos.getValueAt(this.columna, 2).toString());
            this.txtmedida.setText(this.tbdatos.getValueAt(this.columna, 3).toString());
            this.txtpunitario.setText(this.tbdatos.getValueAt(this.columna, 4).toString());
            if (this.tbdatos.getValueAt(this.columna, 5).toString().compareTo("1")==0) {
                this.chivaproducto.setSelected(true);
            }
            else
            {
                this.chivaproducto.setSelected(false);
            }
            
            this.cbmoneda.setSelectedItem(this.tbdatos.getValueAt(this.columna, 6).toString());
            this.btnAceptar.setEnabled(true);
            this.chivaproducto.setEnabled(true);
            this.cbmoneda.setEnabled(true);
            this.txtcantidad.setEnabled(true);
            this.txtpunitario.setEnabled(true);
        }
        catch(Exception ex)
        {

        }
    }//GEN-LAST:event_tbdatosMouseClicked

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        
        if (this.opc==1) {
            
            if (valida_vacio(1)) {
                
                if (valida_formato(1)) {
                    Producto pro = new Producto();
                    pro.setNombre(this.txtnombre.getText());
                    pro.setClave(this.txtclave.getText());
                    pro.setId(Integer.parseInt(this.txtid.getText()));  
                    pro.setMedida(this.txtmedida.getText());
                    pro.setPventa(Double.parseDouble(this.txtpunitario.getText()));
                    pro.setStockmin(Double.parseDouble(this.txtcantidad.getText()));
                    if (this.chivaproducto.isSelected()) {
                       pro.setIva(1); 
                    }
                    else
                    {
                       pro.setIva(0);
                    }
                    
                    pro.setMoneda(this.cbmoneda.getSelectedItem().toString());
                    this.mov.idmoneda=this.cbmoneda.getSelectedIndex()+1;

                    this.mov.colocarproducto(pro);
                    this.mov.setEnabled(true);
                    this.mov.setState(NORMAL);
                    this.dispose(); 
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Formato invalido");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Algun campo esta vacio");
            }
            
        }
        else
        {
            if (valida_formato(2) )
            {
                if (this.opc==2) {
                    Producto pro =new Producto();
                    pro.setNombre(this.txtnombre.getText());
                    pro.setClave(this.txtclave.getText());
                    pro.setId(Integer.parseInt(this.txtid.getText()));  
                    pro.setMedida(this.txtmedida.getText());
                    pro.setStockmin(Double.parseDouble(this.txtcantidad.getText()));
                    this.mov.pro=pro;
                    this.mov.colocarproductoopc();
                    this.mov.setEnabled(true);
                    this.mov.setState(NORMAL);
                    this.dispose();  
                }
                else
                {
                    Producto pro = new Producto();
                    pro.setNombre(this.txtnombre.getText());
                    pro.setClave(this.txtclave.getText());
                    pro.setId(Integer.parseInt(this.txtid.getText()));  
                    pro.setMedida(this.txtmedida.getText());
                    //cantidad
                    pro.setStockmin(Double.parseDouble(this.txtcantidad.getText()));
                    this.mov.colocar_producto_repro(pro);
                    this.mov.setEnabled(true);
                    this.mov.setState(NORMAL);
                    this.dispose();  
                }
                       
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Formato de cantidad invalido");
            }
            
        }
        
          
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         this.mov.setEnabled(true);
         this.mov.setState(NORMAL);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Elegir_ProductoOPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Elegir_ProductoOPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Elegir_ProductoOPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Elegir_ProductoOPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                   // new Elegir_Producto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JComboBox<String> cbmoneda;
    private javax.swing.JCheckBox chivaproducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbcantidad;
    private javax.swing.JLabel lbcantidad1;
    private javax.swing.JLabel lbcantidad2;
    private javax.swing.JLabel lbliva;
    private javax.swing.JTable tbdatos;
    private javax.swing.JTextField txtbuscar;
    private javax.swing.JTextField txtcantidad;
    private javax.swing.JTextField txtclave;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtmedida;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txtpunitario;
    // End of variables declaration//GEN-END:variables
}
